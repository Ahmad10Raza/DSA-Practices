// Find the n’th term in Look-and-say (Or Count and Say) Sequence. The look-and-say sequence is the sequence of the below integers: 
// 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, … 

// How is the above sequence generated? 
// n’th term is generated by reading (n-1)’th term.

// The first term is "1"
// Second term is "11", generated by reading first term as "One 1" 
// (There is one 1 in previous term)
// Third term is "21", generated by reading second term as "Two 1"
// Fourth term is "1211", generated by reading third term as "One 2 One 1" 
// and so on


public  class Count_and_Say_Problem {
    public static String CountAndSay(int n){
        if(n==1){
            return "1"; // base case
        }
        String s=CountAndSay(n-1);
        int count=1,num=s.charAt(0)-'0'; // num is the first character of the string
        StringBuilder temp=new StringBuilder(); // StringBuilder is used to append the string
        for(int i=1;i<s.length();i++){ // i=1 because we have already taken the first character

            if(s.charAt(i)-'0'==num){ // s.charAt(i)-'0' is used to convert the character to integer
                count++; // if the next character is same as the previous one then increase the count
            }
            else{
                temp.append(count); // if the next character is not same as the previous one then append the count and the number
                temp.append(num); // append the number
                num=s.charAt(i)-'0'; // update the number
                count=1; // reset the count
            }
        }
        
        temp.append(count); // append the count and the number
        temp.append(num); // append the number
        return temp.toString(); // return the string
    }
    public static void main(String[] args) {
        int n=4;
        System.out.println(CountAndSay(n));
    }
}